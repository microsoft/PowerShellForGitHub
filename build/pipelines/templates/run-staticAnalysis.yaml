#
# This template contains the necessary jobs to run PSScriptAnalyzer on the repo and
# report the results.
#

steps:
  - powershell: |
      Install-Module -Name PSScriptAnalyzer -Repository PSGallery -Scope CurrentUser -Force -Verbose
    displayName: 'Install PSScriptAnalyzer'

  - powershell: |
       $results = try { Invoke-ScriptAnalyzer -Settings ./PSScriptAnalyzerSettings.psd1 -Path ./ â€“Recurse -ErrorAction Stop } catch { $_.Exception.StackTrace; throw }
       $results | ForEach-Object { Write-Host "##vso[task.logissue type=$($_.Severity);sourcepath=$($_.ScriptPath);linenumber=$($_.Line);columnnumber=$($_.Column);]$($_.Message)" }

       $null = New-Item -Path ..\ -Name ScriptAnalyzer -ItemType Directory -Force
       ./build/scripts/ConvertTo-NUnitXml.ps1 -ScriptAnalyzerResult $results -Path ../ScriptAnalyzer/test-results.xml
    workingDirectory: '$(System.DefaultWorkingDirectory)'
    displayName: 'Run Static Code Analysis (PSScriptAnalyzer)'

  - task: PublishTestResults@2
    displayName: 'Publish ScriptAnalyzer Test Results'
    inputs:
      testRunTitle: 'Windows Test Results for PSScriptAnalyzer'
      buildPlatform: 'Windows'
      testRunner: NUnit
      testResultsFiles: '../ScriptAnalyzer/test-results.xml'
      failTaskOnFailedTests: true # required to fail build when tests fail
    condition: succeededOrFailed()
